{"ast":null,"code":"var _jsxFileName = \"D:\\\\FES\\\\Practice\\\\ReactProjects\\\\movie-app\\\\src\\\\components\\\\Suggested.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Movie from './Movie';\nimport './Suggested.css';\nimport './Movie.css';\nimport Skeleton from './Skeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Suggested = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [loading, setLoading] = useState();\n  async function getSuggested() {\n    setLoading(true);\n    const moviesUrl = 'https://www.omdbapi.com/?s=movie&type=movie&y=2021&apikey=2121abfd';\n    const seriesUrl = 'https://www.omdbapi.com/?s=series&type=series&apikey=2121abfd';\n    const [moviesData, seriesData] = await Promise.all([axios.get(moviesUrl), axios.get(seriesUrl)]);\n    const filteredMovies = []; // Масиви, які будуть містити відсортовані за\n    const filteredSeries = []; // висотою обложки фільми та серіаліи\n\n    // Створюємо Promise для кожного елемента масиву фільмів\n    const moviesLoadPromises = moviesData.data.Search.map(movie => new Promise(resolve => {\n      // Створюємо новий елемент img для\n      // завантаження посилання на постер фільму\n      const img = new Image();\n      // Завантажуємо посилання на постер\n      img.src = movie.Poster;\n      // Чекаємо, коли постер завантажиться\n      img.onload = function () {\n        if (this.height > 330) {\n          filteredMovies.push(movie);\n        }\n        resolve();\n      };\n    }));\n    const seriesLoadPromises = seriesData.data.Search.map(series => new Promise(resolve => {\n      const img = new Image();\n      img.src = series.Poster;\n      img.onload = function () {\n        if (this.height > 330) {\n          filteredSeries.push(series);\n        }\n        resolve();\n      };\n    }));\n\n    // Очікуємо завершення всіх Promise-об'єктів\n    // для масивів фільмів та серіалів\n    // та повертаємо новий Promise-об'єкт\n    await Promise.all([...moviesLoadPromises, ...seriesLoadPromises]);\n    // Оператор розгортання додає кожен елемент кожного масиву окремо\n    // до нового масиву, що дозволяє передати всі Promise'и до методу\n    // Promise.all() як окремі елементи.\n\n    setMovies(filteredMovies.slice(0, 8));\n    setSeries(filteredSeries.slice(0, 8));\n    setLoading(false);\n  }\n  useEffect(() => {\n    getSuggested();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggested\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"suggested__header\",\n        children: \"Latest releases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested__movies\",\n        children: new Array(8).fill(0).map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"suggested__header suggested__header--2nd\",\n        children: \"Popular series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested__movies\",\n        children: new Array(8).fill(0).map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggested\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"suggested__header\",\n        children: \"Latest releases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested__movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          movie: movie\n        }, movie.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"suggested__header suggested__header--2nd\",\n        children: \"Popular series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested__movies\",\n        children: series.map(series => /*#__PURE__*/_jsxDEV(Movie, {\n          series: series\n        }, series.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Suggested, \"cU11+eLYfu4G9RVmvK2FxaFMhMU=\");\n_c = Suggested;\nexport default Suggested;\nvar _c;\n$RefreshReg$(_c, \"Suggested\");","map":{"version":3,"names":["axios","React","useEffect","useState","Movie","Skeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","Suggested","_s","movies","setMovies","series","setSeries","loading","setLoading","getSuggested","moviesUrl","seriesUrl","moviesData","seriesData","Promise","all","get","filteredMovies","filteredSeries","moviesLoadPromises","data","Search","map","movie","resolve","img","Image","src","Poster","onload","height","push","seriesLoadPromises","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","_","index","imdbID","_c","$RefreshReg$"],"sources":["D:/FES/Practice/ReactProjects/movie-app/src/components/Suggested.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Movie from './Movie';\r\nimport './Suggested.css';\r\nimport './Movie.css'\r\nimport Skeleton from './Skeleton';\r\n\r\nconst Suggested = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [series, setSeries] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n\r\n    async function getSuggested() {\r\n        setLoading(true);\r\n\r\n        const moviesUrl = 'https://www.omdbapi.com/?s=movie&type=movie&y=2021&apikey=2121abfd';\r\n        const seriesUrl = 'https://www.omdbapi.com/?s=series&type=series&apikey=2121abfd';\r\n\r\n        const [moviesData, seriesData] = await Promise.all([\r\n            axios.get(moviesUrl),\r\n            axios.get(seriesUrl),\r\n        ]);\r\n\r\n        const filteredMovies = []; // Масиви, які будуть містити відсортовані за\r\n        const filteredSeries = []; // висотою обложки фільми та серіаліи\r\n\r\n        // Створюємо Promise для кожного елемента масиву фільмів\r\n        const moviesLoadPromises = moviesData.data.Search.map(movie => new Promise((resolve) => {\r\n            // Створюємо новий елемент img для\r\n            // завантаження посилання на постер фільму\r\n            const img = new Image();\r\n            // Завантажуємо посилання на постер\r\n            img.src = movie.Poster;\r\n            // Чекаємо, коли постер завантажиться\r\n            img.onload = function () {\r\n                if (this.height > 330) {\r\n                    filteredMovies.push(movie);\r\n                }\r\n                resolve();\r\n            };\r\n        }));\r\n\r\n        const seriesLoadPromises = seriesData.data.Search.map(series => new Promise((resolve) => {\r\n            const img = new Image();\r\n            img.src = series.Poster;\r\n            img.onload = function () {\r\n                if (this.height > 330) {\r\n                    filteredSeries.push(series);\r\n                }\r\n                resolve();\r\n            };\r\n        }));\r\n\r\n        // Очікуємо завершення всіх Promise-об'єктів\r\n        // для масивів фільмів та серіалів\r\n        // та повертаємо новий Promise-об'єкт\r\n        await Promise.all([...moviesLoadPromises, ...seriesLoadPromises]);\r\n        // Оператор розгортання додає кожен елемент кожного масиву окремо\r\n        // до нового масиву, що дозволяє передати всі Promise'и до методу\r\n        // Promise.all() як окремі елементи.\r\n\r\n        setMovies(filteredMovies.slice(0, 8));\r\n        setSeries(filteredSeries.slice(0, 8));\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSuggested();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div className=\"suggested\">\r\n                    <p className=\"suggested__header\">Latest releases</p>\r\n                    <div className=\"suggested__movies\">\r\n                        {new Array(8).fill(0).map((_, index) => (\r\n                            <Skeleton key={index} />\r\n                        ))}\r\n                    </div>\r\n                    <p className=\"suggested__header suggested__header--2nd\">Popular series</p>\r\n                    <div className=\"suggested__movies\">\r\n                        {new Array(8).fill(0).map((_, index) => (\r\n                            <Skeleton key={index} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"suggested\">\r\n                    <p className=\"suggested__header\">Latest releases</p>\r\n                    <div className=\"suggested__movies\">\r\n                        {movies.map(movie => (\r\n                            <Movie movie={movie} key={movie.imdbID} />\r\n                        ))}\r\n                    </div>\r\n                    <p className=\"suggested__header suggested__header--2nd\">Popular series</p>\r\n                    <div className=\"suggested__movies\">\r\n                        {series.map(series => (\r\n                            <Movie series={series} key={series.imdbID} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Suggested;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}