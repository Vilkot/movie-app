{"ast":null,"code":"var _jsxFileName = \"D:\\\\FES\\\\Practice\\\\ReactProjects\\\\movie-app\\\\src\\\\components\\\\Movie.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Movie.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movie = _ref => {\n  _s();\n  let {\n    movie\n  } = _ref;\n  const [rating, setRating] = useState(\"\");\n  const [loading, setLoading] = useState();\n  async function getRating() {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(`https://www.omdbapi.com/?i=${movie.imdbID}&apikey=2121abfd`);\n    setRating(data.imdbRating);\n    setLoading(false);\n  }\n  useEffect(() => {\n    getRating();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie__poster--skeleton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie__title--skeleton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie__info--wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie__type\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie__type--skeleton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie__year--skeleton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie__link--skeleton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Movie, \"dgZ6g0QjSK4zNkz2jKCY89qFMsE=\");\n_c = Movie;\nexport default Movie;\n{/* {loading\r\n                ?\r\n                new Array(10).fill(0).map((_, index) => ( //возможно не нужно\r\n                    <div className=\"movie\" key={index}>\r\n                        <div className=\"movie__poster--skeleton\" />\r\n                        <div className=\"movie__description\">\r\n                            <div className=\"movie__title--skeleton\" />\r\n                            <div className=\"movie__info--wrapper\">\r\n                                <div className=\"movie__type\">\r\n                                    <div className=\"movie__type--skeleton\"> </div>\r\n                                    <div className=\"movie__year--skeleton\"/>\r\n                                </div>\r\n                                <Link to={`https://www.imdb.com/title/${movie.imdbID}`} className=\"movie__link\" target='_blank'>\r\n                                    {rating === \"N/A\" || !rating ? (\r\n                                        \"IMDb\"\r\n                                    ) : (\r\n                                        rating\r\n                                    )}\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                :\r\n                (\r\n                    <div className=\"movie\" key={movie.imdbID}>\r\n                        <img className=\"movie__poster\" src={movie.Poster} />\r\n                        <div className=\"movie__description\">\r\n                            <h1 className=\"movie__title\" title={movie.Title}>{movie.Title}</h1>\r\n                            <div className=\"movie__info--wrapper\">\r\n                                <h2 className=\"movie__type\">\r\n                                    {movie.Type}\r\n                                    <span className=\"movie__year\"> {`(${movie.Year})`}</span>\r\n                                </h2>\r\n                                <Link to={`https://www.imdb.com/title/${movie.imdbID}`} className=\"movie__link\" target='_blank'>\r\n                                    {rating === \"N/A\" || !rating ? (\r\n                                        \"IMDb\"\r\n                                    ) : (\r\n                                        rating\r\n                                    )}\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } */}\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["axios","React","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Movie","_ref","_s","movie","rating","setRating","loading","setLoading","getRating","data","get","imdbID","imdbRating","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FES/Practice/ReactProjects/movie-app/src/components/Movie.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Movie.css';\r\n\r\nconst Movie = ({ movie }) => {\r\n    const [rating, setRating] = useState(\"\");\r\n    const [loading, setLoading] = useState();\r\n\r\n    async function getRating() {\r\n        setLoading(true);\r\n        const { data } = await axios.get(`https://www.omdbapi.com/?i=${movie.imdbID}&apikey=2121abfd`);\r\n        setRating(data.imdbRating);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRating();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"movie\" >\r\n                <div className=\"movie__poster--skeleton\" />\r\n                <div className=\"movie__description\">\r\n                    <div className=\"movie__title--skeleton\" />\r\n                    <div className=\"movie__info--wrapper\">\r\n                        <div className=\"movie__type\">\r\n                            <div className=\"movie__type--skeleton\" />\r\n                            <div className=\"movie__year--skeleton\" />\r\n                        </div>\r\n                        <div className=\"movie__link--skeleton\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Movie;\r\n\r\n{/* {loading\r\n                ?\r\n                new Array(10).fill(0).map((_, index) => ( //возможно не нужно\r\n                    <div className=\"movie\" key={index}>\r\n                        <div className=\"movie__poster--skeleton\" />\r\n                        <div className=\"movie__description\">\r\n                            <div className=\"movie__title--skeleton\" />\r\n                            <div className=\"movie__info--wrapper\">\r\n                                <div className=\"movie__type\">\r\n                                    <div className=\"movie__type--skeleton\"> </div>\r\n                                    <div className=\"movie__year--skeleton\"/>\r\n                                </div>\r\n                                <Link to={`https://www.imdb.com/title/${movie.imdbID}`} className=\"movie__link\" target='_blank'>\r\n                                    {rating === \"N/A\" || !rating ? (\r\n                                        \"IMDb\"\r\n                                    ) : (\r\n                                        rating\r\n                                    )}\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                :\r\n                (\r\n                    <div className=\"movie\" key={movie.imdbID}>\r\n                        <img className=\"movie__poster\" src={movie.Poster} />\r\n                        <div className=\"movie__description\">\r\n                            <h1 className=\"movie__title\" title={movie.Title}>{movie.Title}</h1>\r\n                            <div className=\"movie__info--wrapper\">\r\n                                <h2 className=\"movie__type\">\r\n                                    {movie.Type}\r\n                                    <span className=\"movie__year\"> {`(${movie.Year})`}</span>\r\n                                </h2>\r\n                                <Link to={`https://www.imdb.com/title/${movie.imdbID}`} className=\"movie__link\" target='_blank'>\r\n                                    {rating === \"N/A\" || !rating ? (\r\n                                        \"IMDb\"\r\n                                    ) : (\r\n                                        rating\r\n                                    )}\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } */}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,KAAK,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACpB,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,EAAE;EAExC,eAAec,SAASA,CAAA,EAAG;IACvBD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAM;MAAEE;IAAK,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,8BAA6BP,KAAK,CAACQ,MAAO,kBAAiB,CAAC;IAC9FN,SAAS,CAACI,IAAI,CAACG,UAAU,CAAC;IAC1BL,UAAU,CAAC,KAAK,CAAC;EACrB;EAEAd,SAAS,CAAC,MAAM;IACZe,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACIhB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAD,QAAA,gBAClBhB,OAAA;QAAKiB,SAAS,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC3CrB,OAAA;QAAKiB,SAAS,EAAC,oBAAoB;QAAAD,QAAA,gBAC/BhB,OAAA;UAAKiB,SAAS,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC1CrB,OAAA;UAAKiB,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACjChB,OAAA;YAAKiB,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACxBhB,OAAA;cAAKiB,SAAS,EAAC;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,eACzCrB,OAAA;cAAKiB,SAAS,EAAC;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACvC,eACNrB,OAAA;YAAKiB,SAAS,EAAC;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ,iBACP;AAIX,CAAC;AAAAhB,EAAA,CAlCKF,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAoCX,eAAeA,KAAK;AAEpB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBA7CC;AA6CgB,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}